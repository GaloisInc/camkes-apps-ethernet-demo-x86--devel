/*
 * Copyright 2016, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(D61_BSD)
 */

#include <eth_buffer.h>
#include <autoconf.h>

import <std_connector.camkes>;

component EthDevice {
    hardware;
    emits IRQ irq;
    dataport Buf(ETH_BUF_SIZE) mmio;
}

component HPET {
    hardware;
    emits IRQ irq;
    dataport Buf(0x1000) mmio;
}

component Client {
    consumes IRQ eth_irq;
    consumes IRQ hpet_irq;
    has mutex lock;
    attribute int iospace_id;
    attribute string pci_bdf;
    dataport Buf(ETH_BUF_SIZE) eth_mmio;
    dataport Buf(0x1000) hpet_mmio;
}

assembly {
    composition {
        component Client client;
        component EthDevice eth;
        component HPET hpet;

        connection seL4HardwareMMIO eth_mmio(from client.eth_mmio, to eth.mmio);
        connection seL4HardwareMMIO hpet_mmio(from client.hpet_mmio, to hpet.mmio);
        connection seL4HardwareInterrupt eth_irq(from eth.irq, to client.eth_irq);
        connection seL4HardwareInterrupt hpet_irq(from hpet.irq, to client.hpet_irq);
    }
    configuration {
        eth.mmio_paddr = 0xf7dc0000;
        eth.mmio_size = ETH_BUF_SIZE;
        eth.irq_irq_type = "pci";
        eth.irq_irq_ioapic = 0;
        eth.irq_irq_ioapic_pin = 16;
        eth.irq_irq_vector = 2;

        hpet.mmio_paddr = 0xFED00000;
        hpet.mmio_size = 0x1000;
        hpet.irq_irq_type = "msi";
        hpet.irq_irq_handle = 0;
        hpet.irq_irq_pci_bus = 0;
        hpet.irq_irq_pci_dev = 0;
        hpet.irq_irq_pci_fun = 0;
        hpet.irq_irq_vector = 1;

        client.simple = true;
        client.cnode_size_bits = 12;
#ifdef CONFIG_IOMMU
        client.iospaces = "0x12:0x3:0x0:0";
#endif
        client.iospace_id = 0x12;
        client.pci_bdf = "3:0.0";
        client.simple_untyped20_pool = 4;
        client.heap_size = 0x10000;
        client.dma_pool = 0x200000;
    }
}

